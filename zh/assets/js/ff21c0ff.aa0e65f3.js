"use strict";(self.webpackChunkblogs=self.webpackChunkblogs||[]).push([[9221],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}},70098:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"http/request/request","title":"Request","description":"Before diving into the structure and details of an HTTP request, it\'s important to understand what a request actually is.","source":"@site/docs/http/request/request.md","sourceDirName":"http/request","slug":"/http/request/","permalink":"/zh/docs/http/request/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/zh/docs/installation"},"next":{"title":"path","permalink":"/zh/docs/http/request/path-parameter"}}');var r=n(74848),i=n(28453);const o={},a="Request",l={},d=[{value:"A Request in Plain Text",id:"a-request-in-plain-text",level:2},{value:"Declare a request object in your endpoint",id:"declare-a-request-object-in-your-endpoint",level:2},{value:"<code>IRequest</code> interface",id:"irequest-interface",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"request",children:"Request"})}),"\n",(0,r.jsx)(t.p,{children:"Before diving into the structure and details of an HTTP request, it's important to understand what a request actually is."}),"\n",(0,r.jsx)(t.p,{children:"In the context of web development, an HTTP request is the message a client sends to a server, asking for some action to be performed\u2014such as retrieving a webpage or submitting data. This is the starting point of almost every interaction between a client and your server."}),"\n",(0,r.jsx)(t.p,{children:"While lihil abstracts away most of the low-level details\u2014letting you directly declare headers, query parameters, cookies, and body content as structured inputs to your endpoint\u2014it's still useful to understand what a request looks like under the hood."}),"\n",(0,r.jsx)(t.h2,{id:"a-request-in-plain-text",children:"A Request in Plain Text"}),"\n",(0,r.jsx)(t.p,{children:"At the lowest level, an HTTP request is just plain text sent over the network, following the HTTP protocol.\nHere\u2019s an example of a simple GET request:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-http",children:"GET /path?query=value HTTP/1.1\nHost: example.com\nUser-Agent: Mozilla/5.0\nAccept: text/html,application/xhtml+xml\n"})}),"\n",(0,r.jsx)(t.p,{children:"This shows the basic structure:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"The method (GET) tells the server what action is being requested."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'The path "/path" points to the resource "path"'}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'"?query=value" includes a query parameter "query" with value being "value".'}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"The HTTP version is specified at the end of the first line."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Additional lines are headers, such as Host, User-Agent, and Accept, which provide metadata about the request."}),"\n",(0,r.jsx)(t.p,{children:"Requests can also carry a body. For instance, a POST request might look like this:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-http",children:'POST /submit HTTP/1.1\nHost: example.com\nContent-Type: application/json\nContent-Length: 27\n\n{"key":"value"}\n'})}),"\n",(0,r.jsx)(t.p,{children:"Here, the request includes a body, which contains JSON data. Headers like Content-Type and Content-Length describe how the server should interpret the body."}),"\n",(0,r.jsx)(t.h2,{id:"declare-a-request-object-in-your-endpoint",children:"Declare a request object in your endpoint"}),"\n",(0,r.jsxs)(t.p,{children:["lihil provides higher level abstractions like ",(0,r.jsx)(t.code,{children:"Header"}),", ",(0,r.jsx)(t.code,{children:"Query"}),", ",(0,r.jsx)(t.code,{children:"Body"}),", etc. to let you directly declare the params you need in your endpoint.\nIn most cases, you don\u2019t interact with IRequest directly,  but understanding where this information comes from will help you reason about how the framework works under the hood."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'from lihil import Route\nfrom lihil.interface import IRequest\n\n@Route("create_uesrs")\nasync def ep(req: IRequest):\n    data = await req.body()\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Param parsing in lihil is optimized. It usually won't bring a siginificant performance boost using ",(0,r.jsx)(t.code,{children:"IRequest"})," object directly."]}),"\n",(0,r.jsxs)(t.h2,{id:"irequest-interface",children:[(0,r.jsx)(t.code,{children:"IRequest"})," interface"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"class IRequest(Protocol):\n    def __init__(self, scope: IScope, receive: IReceive | None = None) -> None: ...\n    def __getitem__(self, key: str) -> Any: ...\n    def __iter__(self) -> Iterator[str]: ...\n    def __len__(self) -> int: ...\n    def __eq__(self, value: object) -> bool: ...\n    def __hash__(self) -> int: ...\n    @property\n    def url(self) -> URL: ...\n    @property\n    def headers(self) -> Mapping[str, str]: ...\n    @property\n    def query_params(self) -> Mapping[str, str]: ...\n    @property\n    def path_params(self) -> Mapping[str, Any]: ...\n    @property\n    def cookies(self) -> Mapping[str, str]: ...\n    @property\n    def client(self) -> IAddress | None: ...\n    @property\n    def state(self) -> dict[str, Any]: ...\n    @property\n    def method(self): ...\n    @property\n    def receive(self) -> IReceive: ...\n    async def stream(self) -> AsyncGenerator[bytes, None]: ...\n    async def body(self) -> bytes: ...\n    async def json(self) -> Any: ...\n    def form(\n        self,\n        *,\n        max_files: int | float = 1000,\n        max_fields: int | float = 1000,\n        max_part_size: int = 1024 * 1024,\n    ) -> AsyncContextManager[FormData]: ...\n    async def close(self) -> None: ...\n    async def is_disconnected(self) -> bool: ...\n    async def send_push_promise(self, path: str) -> None: ...\n"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);