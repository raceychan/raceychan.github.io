"use strict";(self.webpackChunkblogs=self.webpackChunkblogs||[]).push([[718],{4934:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"http/request/form","title":"form","description":"Form data is another way to send request body data\u2014commonly used in HTML forms and file uploads. Unlike JSON, form data is encoded with application/x-www-form-urlencoded or multipart/form-data content types.","source":"@site/docs/http/request/form.md","sourceDirName":"http/request","slug":"/http/request/from-data","permalink":"/docs/http/request/from-data","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4.1,"frontMatter":{"sidebar_position":4.1,"title":"form","slug":"from-data"},"sidebar":"tutorialSidebar","previous":{"title":"body","permalink":"/docs/http/request/body-parameter"},"next":{"title":"endpoint","permalink":"/docs/http/endpoint"}}');var t=r(4848),o=r(8453);const s={sidebar_position:4.1,title:"form",slug:"from-data"},i="Form Parameters",l={},d=[{value:"Declaring Form Parameters",id:"declaring-form-parameters",level:2},{value:"Handling File Uploads",id:"handling-file-uploads",level:2},{value:"Advanced: max_files, max_fields, max_part_size",id:"advanced-max_files-max_fields-max_part_size",level:3}];function m(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"form-parameters",children:"Form Parameters"})}),"\n",(0,t.jsxs)(n.p,{children:["Form data is another way to send request body data\u2014commonly used in HTML forms and file uploads. Unlike JSON, form data is encoded with ",(0,t.jsx)(n.code,{children:"application/x-www-form-urlencoded"})," or ",(0,t.jsx)(n.code,{children:"multipart/form-data"})," content types."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"lihil"})," supports form parsing, you can extract form values and uploaded files."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"declaring-form-parameters",children:"Declaring Form Parameters"}),"\n",(0,t.jsxs)(n.p,{children:["You can declare form parameters using ",(0,t.jsx)(n.code,{children:"Annotated[T, form()]"}),". ",(0,t.jsx)(n.code,{children:"lihil"})," will automatically parse the request body and extract form fields for you:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from lihil import Route, form\nfrom typing import Annotated\n\nlogin = Route("/login")\n\n@login.post\nasync def handle_login(\n    username: Annotated[str, form()],\n    password: Annotated[str, form()]\n) -> str:\n    return f"Welcome {username}"\n'})}),"\n",(0,t.jsx)(n.p,{children:"The form() helper marks the parameter as coming from a form body."}),"\n",(0,t.jsx)(n.h2,{id:"handling-file-uploads",children:"Handling File Uploads"}),"\n",(0,t.jsx)(n.p,{children:"Form data also supports file uploads (when the content type is multipart/form-data). You can declare uploaded files as parameters:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from lihil import form, UploadFile\nfrom typing import Annotated\n\n@user.post\nasync def upload_avatar(file: UploadFile) -> str:\n    return file.filename\n"})}),"\n",(0,t.jsx)(n.h3,{id:"advanced-max_files-max_fields-max_part_size",children:"Advanced: max_files, max_fields, max_part_size"}),"\n",(0,t.jsx)(n.p,{children:"When parsing large forms or handling user uploads, you may want to set limits to protect your server. The form() helper accepts options like:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"max_files: maximum number of files"}),"\n",(0,t.jsx)(n.li,{children:"max_fields: maximum number of total fields"}),"\n",(0,t.jsx)(n.li,{children:"max_part_size: maximum size for any part (default: 1MB)"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"@user.post\nasync def upload_many(\n    files: Annotated[list[UploadFile], form(max_files=5, max_part_size=2 * 1024 * 1024)]\n) -> int:\n    return len(files)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Form data is just another kind of body data, parsed differently depending on the content type. With lihil, you can declare form parameters using Annotated[..., form()], and get full control over file handling, field limits, and streaming\u2014all with familiar Python types."})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var a=r(6540);const t={},o=a.createContext(t);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);