"use strict";(self.webpackChunkblogs=self.webpackChunkblogs||[]).push([[1389],{18007:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"advance/plugin/auth","title":"auth","description":"- Lihil comes with authentification & authorization plugins out of the box.","source":"@site/docs/advance/plugin/auth.md","sourceDirName":"advance/plugin","slug":"/advance/plugin/auth","permalink":"/docs/advance/plugin/auth","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Plugin System","permalink":"/docs/advance/plugin/"},"next":{"title":"message bus","permalink":"/docs/advance/plugin/message bus"}}');var o=t(74848),s=t(28453);const r={},l=void 0,a={},c=[];function u(e){const n={blockquote:"blockquote",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Lihil comes with authentification & authorization plugins out of the box."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from lihil import Payload, Route\nfrom lihil.plugins.auth.jwt import JWTAuth, JWTPayload\nfrom lihil.auth.oauth import OAuth2PasswordFlow, OAuthLoginForm\n\nclass UserProfile(JWTPayload):\n    # get support from typehints about what are the available claims\n    __jwt_claims__ = {"expires_in": 300}  # jwt expires in 300 seconds.\n\n    user_id: str = field(name="sub")\n    role: Literal["admin", "user"] = "user"\n\n@me.get(auth_scheme=OAuth2PasswordFlow(token_url="token"))\nasync def get_user(profile: JWTAuth[UserProfile]) -> User:\n    assert profile.role == "user"\n    return User(name="user", email="user@email.com")\n\n@token.post\nasync def create_token(credentials: OAuthLoginForm) -> JWTAuth[UserProfile]:\n    return UserProfile(user_id="user123")\n'})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["When you return ",(0,o.jsx)(n.code,{children:"UserProfile"})," from ",(0,o.jsx)(n.code,{children:"create_token"})," endpoint, it would automatically be serialized as a json web token."]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"JWTConfig"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["To use ",(0,o.jsx)(n.code,{children:"JWTAuth"}),", you would need to provide jwt secret key and algorithm."]}),"\n",(0,o.jsxs)(n.p,{children:["you can do this by creating a ",(0,o.jsx)(n.code,{children:"JWTConfig"})," instance and passing it to ",(0,o.jsx)(n.code,{children:"Lihil"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from lihil.config import lhl_read_config\nfrom lihil.plugins.auth.jwt import JWTConfig\n\n\nconfig = lhl_read_config(".env", config_type=JWTConfig)\nlhl = Lihil(app_config=config)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["where the ",(0,o.jsx)(n.code,{children:".env"})," file should contain:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-env",children:"jwt_secret=your_secret_key\njwt_algorithm=HS256\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Alternatively, you can use your own config class and implementing ",(0,o.jsx)(n.code,{children:"IJWTConfig"})," interface:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class MyConfig(BaseModel):\n    jwt_secret: str\n    jwt_algorithm: str = "HS256"\n'})}),"\n",(0,o.jsx)(n.p,{children:"then set it as the app config"})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(96540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);